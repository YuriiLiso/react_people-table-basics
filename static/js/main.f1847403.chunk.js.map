{"version":3,"sources":["components/Header.jsx","components/HomePage.jsx","components/PersonRow.jsx","components/PeopleTable.jsx","components/PeoplePage.jsx","api.js","components/NotFoundPage.jsx","App.jsx","index.jsx"],"names":["Header","className","to","activeClassName","exact","HomePage","PersonRow","name","sex","born","died","fatherName","motherName","defaultProps","PeopleTable","people","preparedPeople","filter","child","find","parent","map","person","key","slug","PeoplePage","useState","setPeople","useEffect","fetch","then","response","ok","Error","status","statusText","json","NotFoundPage","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,G,MAAS,kBACpB,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAASC,GAAG,IAAID,UAAU,OAAOE,gBAAgB,SAASC,OAAK,GAA/D,QAGA,kBAAC,IAAD,CAASF,GAAG,UAAUD,UAAU,OAAOE,gBAAgB,UAAvD,UAGA,yBAAKF,UAAU,aCVRI,EAAW,kBACtB,oCACE,2C,QCAG,IAAMC,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,KACAC,EAFuB,EAEvBA,IACAC,EAHuB,EAGvBA,KACAC,EAJuB,EAIvBA,KACAC,EALuB,EAKvBA,WACAC,EANuB,EAMvBA,WANuB,OAQvB,4BACE,4BAAKL,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKE,GACL,4BAAKD,KAITL,EAAUO,aAAe,CACvBD,WAAY,iBACZD,WAAY,kBCjBP,IAAMG,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,EAAiBD,EACpBE,QAAO,SAAAC,GAAK,OAAIH,EACdI,MAAK,SAAAC,GAAM,OAAIA,EAAOb,OAASW,EAAMN,YACjCQ,EAAOb,OAASW,EAAMP,iBAE/B,OACE,2BAAOV,UAAU,eACf,+BACE,4BACE,oCACA,mCACA,oCACA,oCACA,sCACA,wCAIHe,EAAeK,KAAI,SAAAC,GAAM,OACxB,2BAAOC,IAAKD,EAAOE,MACjB,kBAAC,EAAcF,SCvBZG,EAAa,WACxB,MAA4BC,mBAAS,IAArC,mBAAOX,EAAP,KAAeY,EAAf,KAMA,OAJAC,qBAAU,WCHHC,MAHQ,qEAIZC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UDFNN,KAAKH,KAChB,IAGD,oCACE,2CACA,kBAAC,EAAD,CAAaZ,OAAQA,MEbdsB,EAAe,kBAC1B,oCACE,gDCsBWC,EAhBH,kBACV,yBAAKrC,UAAU,OAEb,kBAAC,EAAD,MAEA,iCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsC,KAAK,IAAIC,UAAWnC,EAAUD,OAAK,IAC1C,kBAAC,IAAD,CAAOmC,KAAK,UAAUC,UAAWf,IAEjC,kBAAC,EAAD,UCdRgB,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f1847403.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <nav className=\"nav\">\n      <NavLink to=\"/\" className=\"link\" activeClassName=\"active\" exact>\n        Home\n      </NavLink>\n      <NavLink to=\"/people\" className=\"link\" activeClassName=\"active\">\n        People\n      </NavLink>\n      <div className=\"line\" />\n    </nav>\n  </header>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <>\n    <h2>Home page</h2>\n  </>\n);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport const PersonRow = ({\n  name,\n  sex,\n  born,\n  died,\n  fatherName,\n  motherName,\n}) => (\n  <tr>\n    <td>{name}</td>\n    <td>{sex}</td>\n    <td>{born}</td>\n    <td>{died}</td>\n    <td>{motherName}</td>\n    <td>{fatherName}</td>\n  </tr>\n);\n\nPersonRow.defaultProps = {\n  motherName: 'Have no mother',\n  fatherName: 'Have no father',\n};\n\nPersonRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  motherName: PropTypes.string,\n  fatherName: PropTypes.string,\n};\n","import React from 'react';\nimport '../App.scss';\n\nimport PropTypes from 'prop-types';\n\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable = ({ people }) => {\n  const preparedPeople = people\n    .filter(child => people\n      .find(parent => parent.name === child.motherName\n        || parent.name === child.fatherName));\n\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr>\n          <th>name</th>\n          <th>sex</th>\n          <th>born</th>\n          <th>died</th>\n          <th>mother</th>\n          <th>father</th>\n        </tr>\n      </thead>\n\n      {preparedPeople.map(person => (\n        <tbody key={person.slug}>\n          <PersonRow {...person} />\n        </tbody>\n      ))}\n    </table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(\n    PropTypes.shape().isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport '../App.scss';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople().then(setPeople);\n  }, []);\n\n  return (\n    <>\n      <h2>People page</h2>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople() {\n  return fetch(BASE_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <>\n    <h2>Page not found</h2>\n  </>\n);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n\n    <Header />\n\n    <section>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/people\" component={PeoplePage} />\n\n        <NotFoundPage />\n      </Switch>\n    </section>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}